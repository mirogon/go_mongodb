// Code generated by MockGen. DO NOT EDIT.
// Source: mongodbclient.go

// Package mock_go_mongodb is a generated GoMock package.
package mock_go_mongodb

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db_mongo "github.com/mirogon/go_mongodb"
)

// MockMongoDbClient is a mock of MongoDbClient interface.
type MockMongoDbClient struct {
	ctrl     *gomock.Controller
	recorder *MockMongoDbClientMockRecorder
}

// MockMongoDbClientMockRecorder is the mock recorder for MockMongoDbClient.
type MockMongoDbClientMockRecorder struct {
	mock *MockMongoDbClient
}

// NewMockMongoDbClient creates a new mock instance.
func NewMockMongoDbClient(ctrl *gomock.Controller) *MockMongoDbClient {
	mock := &MockMongoDbClient{ctrl: ctrl}
	mock.recorder = &MockMongoDbClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoDbClient) EXPECT() *MockMongoDbClientMockRecorder {
	return m.recorder
}

// GetDatabase mocks base method.
func (m *MockMongoDbClient) GetDatabase(name string) db_mongo.MongoDbDatabase {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDatabase", name)
	ret0, _ := ret[0].(db_mongo.MongoDbDatabase)
	return ret0
}

// GetDatabase indicates an expected call of GetDatabase.
func (mr *MockMongoDbClientMockRecorder) GetDatabase(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDatabase", reflect.TypeOf((*MockMongoDbClient)(nil).GetDatabase), name)
}
