// Code generated by MockGen. DO NOT EDIT.
// Source: mongodbdatabase.go

// Package mock_go_mongodb is a generated GoMock package.
package mock_go_mongodb

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db_mongo "github.com/mirogon/go_mongodb"
)

// MockMongoDbDatabase is a mock of MongoDbDatabase interface.
type MockMongoDbDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockMongoDbDatabaseMockRecorder
}

// MockMongoDbDatabaseMockRecorder is the mock recorder for MockMongoDbDatabase.
type MockMongoDbDatabaseMockRecorder struct {
	mock *MockMongoDbDatabase
}

// NewMockMongoDbDatabase creates a new mock instance.
func NewMockMongoDbDatabase(ctrl *gomock.Controller) *MockMongoDbDatabase {
	mock := &MockMongoDbDatabase{ctrl: ctrl}
	mock.recorder = &MockMongoDbDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoDbDatabase) EXPECT() *MockMongoDbDatabaseMockRecorder {
	return m.recorder
}

// GetCollection mocks base method.
func (m *MockMongoDbDatabase) GetCollection(arg0 string) db_mongo.MongoDbCollection {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCollection", arg0)
	ret0, _ := ret[0].(db_mongo.MongoDbCollection)
	return ret0
}

// GetCollection indicates an expected call of GetCollection.
func (mr *MockMongoDbDatabaseMockRecorder) GetCollection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCollection", reflect.TypeOf((*MockMongoDbDatabase)(nil).GetCollection), arg0)
}
